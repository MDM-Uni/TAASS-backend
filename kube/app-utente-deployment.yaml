apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe -f docker-compose_kompose.yml convert --out kube
    kompose.image-pull-policy: Never
    kompose.service.type: NodePort
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: app-utente
  name: app-utente
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app-utente
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe -f docker-compose_kompose.yml convert --out kube
        kompose.image-pull-policy: Never
        kompose.service.type: NodePort
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/microservizi-net: "true"
        io.kompose.network/utente-net: "true"
        io.kompose.service: app-utente
    spec:
      containers:
        - env:
            - name: SPRING_DATASOURCE_PASSWORD
              value: admin
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://dbpostgresql-utente:5433/utente
            - name: SPRING_DATASOURCE_USERNAME
              value: admin
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
            - name: SPRING_RABBITMQ_HOST
              value: rabbitmq
            - name: SPRING_RABBITMQ_PASSWORD
              value: guest
            - name: SPRING_RABBITMQ_PORT
              value: "5672"
            - name: SPRING_RABBITMQ_USERNAME
              value: guest
          image: utente
          imagePullPolicy: Never
          name: microservizio-utente
          ports:
            - containerPort: 8080
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/utente
              name: utente-data
      restartPolicy: Always
      volumes:
        - name: utente-data
          persistentVolumeClaim:
            claimName: utente-data
status: {}
