apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose_kompose.yml convert --out kube
    kompose.service.type: NodePort
    kompose.version: 1.26.1 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: api-gateway
  name: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: api-gateway
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f docker-compose_kompose.yml convert --out kube
        kompose.service.type: NodePort
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/frontend-apigateway-net: "true"
        io.kompose.network/microservizi-net: "true"
        io.kompose.service: api-gateway
    spec:
      containers:
        - env:
            - name: SERVER_PORT
              value: "8079"
            - name: SPRING_CLOUD_GATEWAY_ROUTES_0__ID
              value: app_utente
            - name: SPRING_CLOUD_GATEWAY_ROUTES_0__PREDICATES_0_
              value: Path=/utente/**,/storia/**
            - name: SPRING_CLOUD_GATEWAY_ROUTES_0__URI
              value: http://host.docker.internal:8080/
            - name: SPRING_CLOUD_GATEWAY_ROUTES_1__ID
              value: app_ospedale
            - name: SPRING_CLOUD_GATEWAY_ROUTES_1__PREDICATES_0_
              value: Path=/ospedale/**
            - name: SPRING_CLOUD_GATEWAY_ROUTES_1__URI
              value: http://host.docker.internal:8081/
            - name: SPRING_CLOUD_GATEWAY_ROUTES_2__FILTERS_0_
              value: PrefixPath=/api/v1
            - name: SPRING_CLOUD_GATEWAY_ROUTES_2__ID
              value: app_negozio
            - name: SPRING_CLOUD_GATEWAY_ROUTES_2__PREDICATES_0_
              value: Path=/carrelli/**,/indirizzi/**,/ordini/**,/prodotti/**
            - name: SPRING_CLOUD_GATEWAY_ROUTES_2__URI
              value: http://host.docker.internal:8082/
          image: marcoscale98/taass:apigateway
          name: api-gateway
          ports:
            - containerPort: 8079
          resources: {}
      restartPolicy: Always
status: {}
