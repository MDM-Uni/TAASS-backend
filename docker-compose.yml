version: '3'

services:

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-alpine
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
#    volumes:
#      - rabbitmq-data:/var/lib/rabbitmq

  ######################### utente #########################
  dbpostgresql_utente:
    container_name: postgres_utente
    image: "postgres"
    ports:
      - "5433:5432"
    volumes:
      - utente-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: utente
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      restart: unless-stopped

  app_utente:
    build: utente-microservizio
    image: utente
    container_name: microservizio_utente
    volumes:
      - utente-data:/var/lib/utente
    ports:
      - "8080:8080"
    depends_on:
      - dbpostgresql_utente
      - rabbitmq
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbpostgresql_utente:5432/utente
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672

  ######################### ospedale #########################
  dbpostgresql_ospedale:
    container_name: postgres_ospedale
    image: "postgres"
    ports:
      - "5434:5432"
    volumes:
      - ospedale-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ospedale
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      restart: unless-stopped

  app_ospedale:
    build: ospedale-microservizio
    image: ospedale
    container_name: microservizio_ospedale
    volumes:
      - ospedale-data:/var/lib/ospedale
    ports:
      - "8081:8080"
    depends_on:
      - dbpostgresql_ospedale
      - rabbitmq
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbpostgresql_ospedale:5432/ospedale
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672

  ######################### negozio #########################
  dbpostgresql_negozio:
    container_name: postgres_negozio
    image: "postgres"
    ports:
      - "5435:5432"
    volumes:
      - negozio-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: negozio
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      restart: unless-stopped

  app_negozio:
    build: negozio-microservizio
    image: negozio
    container_name: microservizio_negozio
    volumes:
      - negozio-data:/var/lib/negozio
    ports:
      - "8082:8080"
    depends_on:
      - dbpostgresql_negozio
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbpostgresql_negozio:5432/negozio
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  ######################### pgadmin #########################
  pgadmin:
    container_name: pgadmin4_container_master
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_LISTEN_PORT: 50
    ports:
      - "5050:50"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    links:
      - "dbpostgresql_negozio:pgsql-server"
      - "dbpostgresql_utente:pgsql-server"
      - "dbpostgresql_ospedale:pgsql-server"
    depends_on:
      - dbpostgresql_negozio
      - dbpostgresql_utente
      - dbpostgresql_ospedale
    logging:
      driver: none

  ######################### frontend - web #########################
  frontend_web:
    container_name: frontend_web
    image: marcoscale98/taass
    ports:
      - "4200:80"
    volumes:
      - frontend-data:/var/lib/frontend
    depends_on:
      - app_negozio
      - app_utente
      - app_ospedale

 ######################## api-gateway ###################
  api-gateway:
    container_name: api-gateway
    build: api-gateway
    image: api-gateway
    ports:
      - "8079:8079"
    depends_on:
      - app_negozio
      - app_utente
      - app_ospedale

######################### volumi #########################
volumes:
  negozio-db-data:
  negozio-data:
  utente-db-data:
  utente-data:
  ospedale-db-data:
  ospedale-data:
  pgadmin-data:
  rabbitmq-data:
  frontend-data: